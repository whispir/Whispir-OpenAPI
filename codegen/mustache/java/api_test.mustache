package {{package}};

import {{invokerPackage}}.ApiException;
{{#imports}}import {{import}};
{{/imports}}
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{#supportStreaming}}
import java.io.InputStream;
{{/supportStreaming}}
{{/fullJavaUtil}}
import java.net.URI;

{{#operations}}
{{#operation}}
import {{package}}.{{classname}}.{{operationIdCamelCase}}Params;
{{/operation}}
{{/operations}}

/**
 * API tests for {{classname}}
 */
@Disabled
public class {{classname}}Test {
    private final {{classname}} api = new {{classname}}();

    {{#operations}}
    {{#operation}}
    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void {{operationIdCamelCase}}Test() throws ApiException {
        {{#requiredParams}}
        {{^isBodyParam}}
        {{^isHeaderParam}}
        {{^vendorExtensions.x-isApiKey}}
        {{{dataType}}} {{paramName}} = null;
        {{/vendorExtensions.x-isApiKey}}
        {{/isHeaderParam}}
        {{/isBodyParam}}
        {{#isBodyParam}}
        {{#vars}}
        {{^isReadOnly}}
        {{^isPrimitiveType}}
        {{#isArray}}
        List<{{operationIdCamelCase}}Params.{{{complexType}}}> {{baseName}} = null; 
        {{/isArray}}
        {{#isUri}}  
        {{{dataType}}} {{baseName}} = null;
        {{/isUri}}              
        {{#isNumber}}
         {{{dataType}}} {{baseName}} = null;
        {{/isNumber}}
        {{^isUri}}
        {{^isArray}}
        {{^isNumber}}
        {{operationIdCamelCase}}Params.{{{dataType}}} {{baseName}} = null;
        {{/isNumber}}
        {{/isArray}}
        {{/isUri}}            
        {{/isPrimitiveType}}
        {{#isPrimitiveType}}
        {{#isEnum}}
        {{operationIdCamelCase}}Params.{{enumName}} {{baseName}} = null;
        {{/isEnum}}
        {{^isEnum}}
        {{{dataType}}} {{baseName}} = null;
        {{/isEnum}}
        {{/isPrimitiveType}}
        {{/isReadOnly}}
        {{/vars}}
        {{/isBodyParam}}
        {{/requiredParams}}
        {{#optionalParams}}
        {{{dataType}}} {{paramName}} = null;
        {{/optionalParams}}
        {{operationIdCamelCase}}Params params = {{operationIdCamelCase}}Params.builder()
        {{#requiredParams}}
        {{^isBodyParam}}
        {{^isHeaderParam}}
        {{^vendorExtensions.x-isApiKey}}
                                        .set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}({{paramName}})
        {{/vendorExtensions.x-isApiKey}}
        {{/isHeaderParam}}
        {{/isBodyParam}}
        {{#isBodyParam}}
        {{#vars}}
        {{^isReadOnly}}
                                        .{{setter}}({{baseName}})
        {{/isReadOnly}}
        {{/vars}}                                        
        {{/isBodyParam}}
        {{/requiredParams}}
        {{#optionalParams}}
                                        .set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}({{paramName}})
        {{/optionalParams}}
                                        .build();
        {{#returnType}}{{{returnType}}} response = {{/returnType}}api.{{vendorExtensions.x-sdkOperation}}(params);
        // TODO: test validations
    }

    {{/operation}}
    {{/operations}}
}
