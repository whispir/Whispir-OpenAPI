{{#apiInfo}}
{{#apis}}
{{#operations}}
export * from './{{ classFilename }}';
{{/operations}}
{{#withInterfaces}}
export * from './{{ classFilename }}Interface'
{{/withInterfaces}}
{{/apis}}
import * as http from 'http';

export class HttpError extends Error {
    constructor(public body: any, public statusCode?: number) {
        super(body.errorText);
        this.name = 'HttpError';
    }
};

export type ApiConfig = {
    /**
     * The default header to be included in the request
     */
    defaultHeaders: { [name: string]: string };
    /**
     * The host domain that requests will be made to
     */
    host: string;
};

export type RequestOptions = {
    /**
     * The additional headers to be included in the request
     */
    headers: { [name: string]: string };
};

export type Response<T = {}> = T & {
    /**
     * The last response, useful to get direct access to response headers
     */
    lastResponse: http.IncomingMessage;
};

export type CreateResponse<T = {}> = Response<T> & {
    /**
     * The resource identifier
     */
    id: string;
};

export { RequestFile } from '../model/models';
{{/apiInfo}}
