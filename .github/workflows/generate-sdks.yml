name: generate-sdks

on:
  release:
    types: [published]

jobs:
  generate-sdks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ['node', 'java']
    steps:
      # Checkout whispir/openapi repo
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required to fetch all tags
      # Clone whispir/whispir-<language> repo
      - uses: actions/checkout@v3
        with:
          ref: 'main'
          repository: whispir/whispir-${{ matrix.language }}
          path: whispir-${{ matrix.language }}
          token: ${{ secrets.PAT }}
      - name: Create release branch
        run: |
          cd whispir-${{ matrix.language }}
          git checkout -b release/${{ github.ref_name }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Generate SDK files
        run: |
          cd codegen
          yarn install
          yarn generate:${{ matrix.language }}
      - name: Commit changelog and manifest files
        id: make-commit
        run: |
          cd whispir-${{ matrix.language }}
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git add -A
          git commit --message "chore(openapi): Release Whispir OpenAPI specification ${{ github.ref_name }}"
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Push new branch
        run: |
          cd whispir-${{ matrix.language }}
          git push origin release/${{ github.ref_name }}
      - name: Get conventional commit type from semantic version change
        id: conventional-commit-type
        run: |
          NEW_TAG=$(git describe --abbrev=0 --tags)
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags $NEW_TAG^)
          NEW_VERSION=$(echo $NEW_TAG | cut -d "v" -f2)
          PREVIOUS_VERSION=$(echo $PREVIOUS_TAG | cut -d "v" -f2)
          echo "commit-type=$(node codegen/semver-diff-type.js $PREVIOUS_VERSION $NEW_VERSION)" >> $GITHUB_OUTPUT
      - name: Create pull request into main
        uses: thomaseizinger/create-pull-request@08c462ea5f7e036ae693796541404b4297a480d6 # 1.2.2
        with:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          head: release/${{ github.ref_name }}
          repository: whispir/whispir-${{ matrix.language }}
          base: main
          title: '${{ steps.conventional-commit-type.outputs.commit-type }}: Release Whispir OpenAPI specification ${{ github.ref_name }}'
          body: |
            This PR was automatically created in response to a new release of whispir/openapi.

            Code commit: ${{ steps.make-commit.outputs.commit }}.
