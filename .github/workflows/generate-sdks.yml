name: generate-sdks

on:
  push:
  # release:
  #   types: [published]

jobs:
  generate-sdks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ['node', 'java']
    steps:
      # Checkout richardfontein/openapi repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Clone richardfontein/whispir-<language> repo
      - uses: actions/checkout@v2
        with:
          repository: richardfontein/whispir-${{ matrix.language }}
          path: whispir-${{ matrix.language }}
          token: ${{ secrets.PAT }}
      # Create release branch
      - name: Create release branch
        run: |
          cd whispir-${{ matrix.language }}
          git checkout -b release/${{ github.ref_name }}
      # Generate SDK
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Generate SDK files
        run: |
          cd whispir-sdk-codegen
          yarn install
          yarn generate
      - name: Commit changelog and manifest files
        id: make-commit
        run: |
          cd whispir-${{ matrix.language }}
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git add -A
          git commit --message "chore(sdk): Release ${{ github.ref_name }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
      - name: Push new branch
        run: |
          cd whispir-${{ matrix.language }}
          git push origin release/${{ github.ref_name }}
      - name: Get conventional commit type from semantic version change
        id: conventional-commit-type
        run: |
          NEW_TAG=$(git describe --abbrev=0 --tags)
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags $NEW_TAG^)
          NEW_VERSION=$(echo $NEW_TAG | cut -d "v" -f2)
          PREVIOUS_VERSION=$(echo $PREVIOUS_TAG | cut -d "v" -f2)
          echo "::set-output name=commit-type::$(node whispir-sdk-codegen/version-diff.js $PREVIOUS_VERSION $NEW_VERSION)"
      - name: Create pull request into main
        uses: thomaseizinger/create-pull-request@08c462ea5f7e036ae693796541404b4297a480d6 # 1.2.2
        with:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          head: release/${{ github.ref_name }}
          repository: richardfontein/whispir-${{ matrix.language }}
          base: main
          title: 'chore: Release ${{ github.ref_name }}'
          body: |
            This PR was automatically created in response to a new release of richardfontein/openapi.

            I've updated the version and code commit: ${{ steps.make-commit.outputs.commit }}.
