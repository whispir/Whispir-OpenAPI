extends: "./.spectral.base.yaml"
rules:
  required-all-request-headers:
    description: 'All requests must have the following headers "parameters": "X-Api-Key".'
    severity: error
    given: $.paths[*][get,put,post,delete,options,head,patch,trace]
    then:
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^X-Api-Key$"
  required-read-request-headers:
    description: 'Read requests must have the following headers "parameters": "Accept".'
    severity: error
    given: $.paths[*][get]
    then:
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^Accept$"
  required-write-request-headers:
    description: 'Write requests must have the following headers "parameters": "Content-Type", "Accept".'
    severity: error
    given: $.paths[*][put,post]
    then:
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^Content-Type$"
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^Accept$"
  required-list-pagination-request-query-parameters:
    description: 'Read list requests must have the following query "parameters": "limit", "offset", "sortOrder", "sortFields".'
    severity: error
    # Tests for the lack of presence of '{<resource>Id}' at the end of the path with 'get' verb, indicating a List <resource>'s endpoint
    given: $.paths[?(!/{.*Id}$/i.test(@property))]['get']
    then:
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^limit$"
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^offset$"
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^sortOrder$"
      - field: parameters
        function: schema
        functionOptions:
          dialect: draft7
          schema:
            type: array
            contains:
              type: object
              properties:
                name:
                  type: string
                  pattern: "^sortFields$"
  required-all-response-headers:
    description: 'All responses must have the following "headers": "Access-Control-Allow-Origin", "Expires", "Cache-Control".'
    severity: error
    given: $..responses[*]
    then:
      field: headers
      function: schema
      functionOptions:
        dialect: draft7
        schema:
          type: object
          required: ["Access-Control-Allow-Origin", "Expires", "Cache-Control"]
  required-content-response-headers:
    description: 'Responses with content must have the following "headers": "Content-Type", "Content-Length".'
    severity: error
    given: $.paths[*]..responses[?(@property != 204)]
    then:
      field: headers
      function: schema
      functionOptions:
        dialect: draft7
        schema:
          type: object
          required: ["Content-Type", "Content-Length"]
  required-post-response-headers:
    description: 'Successful post endpoint responses must have the following "headers": "Location".'
    severity: error
    given: $.paths[*][post]..responses[?(@property != 204 && @property >= 200 && @property < 300)]
    then:
      field: headers
      function: schema
      functionOptions:
        dialect: draft7
        schema:
          type: object
          required: ["Location"]
overrides:
  - rules:
      schema-examples: off
      schema-descriptions: off
      schema-property-descriptions: off
      schema-property-examples: off
    files:
      - "**#/components/schemas/messagingoptions"
      - "**#/components/schemas/locations"
      - "**#/components/schemas/location"
      - "**#/components/schemas/user" # User Endpoint Schemas
      - "**#/components/schemas/event" # Event Endpoint Schemas
      - "**#/components/schemas/import" # Import Endpoint Schemas
      - "**#/components/schemas/fieldMapping"
      - "**#/components/schemas/auth" # Auth Endpoint Schemas
      - "**#/components/schemas/activity" # Activity Endpoint Schemas
      - "**#/components/requestBodies/event"
  - rules:
      payload-examples: off
    files:
      - "**#/paths/~1workspaces~1{workspaceId}~1events" # Events Endpoint Examples
      - "**#/components/requestBodies/event"
      - "**#/paths/~1activities" # activity Endpoint Examples
      - "**#/paths/~1users" # user Endpoint Examples
      - "**#/paths/~1workspaces~1{workspaceId}~1import" # import Endpoint Examples
      - "**#/paths/~1auth" # Auth Endpoint Exampleses
      - "**#/paths/~1workspaces~1{workspaceId}~1contacts" # Contacts Endpoint Examples
      - "**#/paths/~1workspaces~1{workspaceId}~1templates" # Templates Endpoint Examples
  - rules:
      required-list-pagination-request-query-parameters: off
    files:
      - "**#/paths/~1auth~1verify/get" # Doesn't adhere to RESTful API standards
